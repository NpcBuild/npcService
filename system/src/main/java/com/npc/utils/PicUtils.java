package com.npc.utils;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;

/**
 * @author NPC
 * @description 图片相关工具类
 * @create 2024/8/1 19:16
 */
public class PicUtils {
    public static void convertImageToBinary(String imagePath) {
        try (FileInputStream fis = new FileInputStream(new File(imagePath))) {
            int content;
            while ((content = fis.read())!= -1) {
                System.out.printf("%02X", content);
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
    public static void convertBinaryToImage(byte[] binaryData, String outputPath) {
        try (FileOutputStream fos = new FileOutputStream(outputPath)) {
            fos.write(binaryData);
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    public static void main2(String[] args) {
        String s = "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";
        byte[] binaryData = s.getBytes();
        String outputPath = "D:\\output.jpg"; // 输出图片的路径及文件名
        convertBinaryToImage(binaryData, outputPath);
    }

    public static void main(String[] args) {
        String imagePath = "C:\\Users\\NPC\\Pictures\\1\\IMG_3082.jpeg";
        convertImageToBinary(imagePath);
    }
}
